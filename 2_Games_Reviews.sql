drop table if exists games, reviews cascade;


create table games
(
	id int primary key generated by default as identity,
	title text,
	genre text,
	price int
);

create table reviews
(
	id int primary key generated by default as identity,
	game_id int references games(id),
	content text,
	rating int
);

insert into games(title, genre, price)
values
('Bunker', 'visual novel', 120),
('Art of Electronics', 'educational', 200),
('Canteen Simulator', 'racing', 300);

insert into reviews(game_id, content, rating)
values
(1, 'genre of the game must be comedy, so funny', 5),
(2, 'beware of its extreme difficulty!! im stuck at tutorial', 2),
(3, 'trash!! >:(', 1),
(3, 'nice game, when is the soup update though?', 4);

select * from games;

select * from reviews;

select *
from games
         left join reviews on games.id = reviews.game_id;

select
  ga.id,
  ga.title,
  ga.genre,
  ga.price,
  coalesce(json_agg(json_build_object(
    'id', rev.id, 'content', rev.content, 'rating', rev.rating))
      filter (where rev.id is not null), '[]')
        as reviews
from games ga
left join reviews rev on ga.id = rev.game_id
group by ga.id
order by ga.id;
